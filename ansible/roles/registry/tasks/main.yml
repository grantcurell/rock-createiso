#######################################################
###########  Install Docker Distribution ##############
#######################################################
---
- name: Import tfplenum variables
  include_vars:
    file: "{{ tfplenum_vars }}"
  tags: pull-docker-images

- name: Install Docker Dist
  yum:
    name: docker-distribution
    state: installed

- name: docker-dist config template
  template:
    backup: yes
    src: config.yml.j2
    dest: /etc/docker-distribution/registry/config.yml
    owner: root
    group: root
    mode: 0644
  register: docker_dist_config_result

- name: Registry Firewall Port
  firewalld:
    port: "{{ firewall_port }}/tcp"
    permanent: true
    immediate: true
    state: enabled

- name: Enable docker distribution service
  systemd:
    name: docker-distribution
    enabled: yes
    state: started
    daemon_reload: yes

- name: Restart docker-dist
  service:
    name: docker-distribution
    state: restarted
    enabled: yes
  when: docker_dist_config_result.changed

- name: Install Docker
  yum:
    name:
      - python-pip
      - docker
    state: installed

- name: Ensure Pip Version is 8.1.2
  shell: |
    pip install pip==8.1.2

- name: install docker-py pip module
  pip:
    name:
      - "requests"
      - "urllib3"
      - "docker-py"
      - "junit-xml==1.8"
    state: forcereinstall

- name: docker daemon conf
  template:
    backup: yes
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644
  register: docker_config_result

- name: Restart Docker
  systemd:
    name: docker
    enabled: yes
    state: restarted

- name: Download docker container images from internet
  docker_image:
    name: "{{item}}"
  with_items:
    - "{{ kube_images }}"
  tags: pull-docker-images

- name: Tag local images for upload to registry
  shell: "docker tag {{ item }} localhost:{{ firewall_port }}/{{ item }}"
  with_items:
    - "{{ kube_images }}"       
  tags: pull-docker-images    

- name: Upload local images to registry
  docker_image:
    name: "localhost:{{ firewall_port }}/{{ item }}"
    push: yes
    pull: no
  with_items:
    - "{{ kube_images }}"
  tags: pull-docker-images

...
